// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pdi.Full.Micro.Service.Repositories.Contexts;

namespace Pdi.Full.Micro.Service.WebApi.Migrations
{
    [DbContext(typeof(FullServiceDbContext))]
    partial class FullServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("Pdi.Full.Micro.Service.Entities.Models.ItemDaVenda", b =>
                {
                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VendaId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PercentualDeDesconto")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("TEXT");

                    b.Property<int>("Sequencial")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValorTotalDosItens")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("TEXT");

                    b.HasKey("ProdutoId", "VendaId");

                    b.HasIndex("VendaId");

                    b.ToTable("ItensDasVendas");
                });

            modelBuilder.Entity("Pdi.Full.Micro.Service.Entities.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal>("Preco")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("QuantidadeEmEstoque")
                        .HasColumnType("TEXT");

                    b.Property<long>("Sequencial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Pdi.Full.Micro.Service.Entities.Models.Venda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDaVenda")
                        .HasColumnType("TEXT");

                    b.Property<long>("Sequencial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("Pdi.Full.Micro.Service.Entities.Models.ItemDaVenda", b =>
                {
                    b.HasOne("Pdi.Full.Micro.Service.Entities.Models.Venda", null)
                        .WithMany("Itens")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
